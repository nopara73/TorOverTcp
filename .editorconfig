root = true

[*.cs]
indent_style = tab
indent_size = 4
tab_size = 4

dotnet_style_qualification_for_field = false : warning
dotnet_style_qualification_for_property = false : warning
dotnet_style_qualification_for_method = false : warning
dotnet_style_qualification_for_event = false : warning

dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access = true : warning

dotnet_style_object_initializer = false : warning
dotnet_style_collection_initializer = true : warning
dotnet_style_explicit_tuple_names = true : warning

csharp_style_inlined_variable_declaration = true : warning

csharp_prefer_simple_default_expression = true : warning

dotnet_sort_system_directives_first = true : warning

csharp_indent_case_contents = true : warning
csharp_indent_switch_labels = true : warning

csharp_space_between_method_declaration_parameter_list_parentheses = false : warning
csharp_space_between_method_call_parameter_list_parentheses = false : warning

csharp_preserve_single_line_blocks = true : warning

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# name all static fields using PascalCase
dotnet_naming_rule.static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_fields_should_be_pascal_case.symbols  = static_fields
dotnet_naming_rule.static_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static

# name all readonly fields using PascalCase
dotnet_naming_rule.readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.readonly_fields_should_be_pascal_case.symbols  = readonly_fields
dotnet_naming_rule.readonly_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.readonly_fields.applicable_kinds   = field
dotnet_naming_symbols.readonly_fields.required_modifiers = readonly

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = warning
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style    = camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal, protected

dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case 

# Async suffix
dotnet_naming_rule.async_methods_end_with_async.symbols  = any_async_methods
dotnet_naming_rule.async_methods_end_with_async.style    = end_with_async
dotnet_naming_rule.async_methods_end_with_async.severity = warning
dotnet_naming_symbols.any_async_methods.applicable_kinds           = method
dotnet_naming_symbols.any_async_methods.applicable_accessibilities = *
dotnet_naming_symbols.any_async_methods.required_modifiers         = async
dotnet_naming_style.end_with_async.required_suffix = Async
dotnet_naming_style.end_with_async.capitalization  = pascal_case